#!/bin/sh -

url_login=https://ankiweb.net/account/login
url_edit=https://ankiuser.net/edit/
url_save=https://ankiuser.net/edit/save
mkdir tmp 2>&-
cookie_path=tmp/cookie
csrf_path=tmp/csrf_token
auth_path=$HOME/.accounts/anki


function http() {
    curl 2>&- -b $cookie_path -c $cookie_path -L -w $@
}

function fail() {
    echo $@;
    exit 1;
}

function login() {
    content=`http "%{url_effective}" $url_edit`
    url="https://${content##://}"

    if [ "$url_login" = "$url" ]; then
        csrf_token=${${${content/*csrf_token*value}#*\"}%%\"*}
        if [ ! $csrf_token ]; then
            fail "$content" "No csrf_token parsed at login page."
        fi
        echo "Parsed login csrf_token: $csrf_token"

        auth=$(< $auth_path)
        http_code=`http "${http_code}" $url_login -o /dev/null\
            --data-urlencode "username=${auth%:*}"\
            --data-urlencode "password=${auth#*:}"\
            --data-urlencode "csrf_token=$csrf_token"\
            --data-urlencode "submitted=1"`
        if [ $http_code != "302" ]; then
            fail "$content" "Login failed."
        fi
        content=`http "%{url_effective}" $url_edit`
        url="https://${content##://}"
    fi
    if [ "$url_edit" != "$url" ]; then
        fail "$content" "Unknown Redirection"
    fi
    echo "Login success."

    csrf_token=${${${content/*editor.csrf_token2}#*\'}%%\'*}
    if [ ! $csrf_token ]; then
        fail "$content" "No csrf_token parsed at edit page."
    fi
    echo "Parsed edit csrf_token: $csrf_token"
    echo $csrf_token > $csrf_path
}

function add_note() {
    http_code=`http "%{http_code}"\
        --data-urlencode 'data=[["hello test3","world"],""]'\
        --data-urlencode "csrf_token=$(< $csrf_path)"\
        --data-urlencode "mid=1489634350714"\
        --data-urlencode "deck=Literature"`
    test $http_code = "200"
}

if ! add_note; then
    login
    if ! add_note; then
        fail "Failed to add note."
    fi
fi
